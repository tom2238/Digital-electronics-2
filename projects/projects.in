#
# A common settings for all projects in this folder
#

TARGET    = DEMO
MCU       = atmega328p
MCU_DUDE  = m328p
F_CPU     = 16000000
USBPORT   = /dev/ttyUSB0

## AVR 8-bit toolchain
# https://www.microchip.com/mplab/avr-support/avr-and-arm-toolchains-c-compilers
PREFIX = /opt/avr8-gnu-toolchain-linux_x86_64
#PREFIX = /usr

# Avrdude options
HOSTNAME=$(shell hostname)
ifeq "$(HOSTNAME)" "porteus"
  AVRDUDE_AVR_OPTIONS = -v -b 57600
else
  AVRDUDE_AVR_OPTIONS = -v 
endif 

##
## You should not have to change anything below here
##

# Define variables used as names of programs in built-in rules
export LC_ALL=C
BINDIR  = $(PREFIX)/bin
CC      = $(BINDIR)/avr-gcc 
AS      = $(BINDIR)/avr-gcc -x assembler-with-cpp
OBJDUMP = $(BINDIR)/avr-objdump
OBJCOPY = $(BINDIR)/avr-objcopy
SIZE    = $(BINDIR)/avr-size
AVRDUDE = avrdude
RM      = rm -f
RMFILES = *.o *.hex *.map *.elf *.lss

# Extra flags to give to the C compiler
# https://gcc.gnu.org/onlinedocs/gcc/Warning-Options.html
CFLAGS  = -std=c99 -Wall -Wextra -Werror -g -Os -mmcu=$(MCU) -DF_CPU=$(F_CPU)UL -I. -I$(LIBRARY_DIR)/inc
# Extra flags to give to the assembler
ASFLAGS  = -mmcu=$(MCU) -Wall -I$(LIBRARY_DIR)/inc
# Extra flags to give to compilers when they are supposed to invoke the linker
LDFLAGS = -mmcu=$(MCU) -Wl,-Map=$(TARGET).map -Wl,--cref

# We define all the targets that are not files
.PHONY = all list size flash clean
